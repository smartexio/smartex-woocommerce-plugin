<?xml version="1.0" encoding="UTF-8" ?>
<!--
/**
 * The MIT License (MIT)
 * 
 * Copyright (c) 2016 Smartex.io Ltd.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
 -->
<container xmlns="http://symfony.com/schema/dic/services">
    <parameters>
        <parameter key="network.class">Smartex\Network\Livenet</parameter>
        <parameter key="adapter.class">Smartex\Client\Adapter\CurlAdapter</parameter>
        <parameter key="key_manager.class">Smartex\KeyManager</parameter>
        <parameter key="key_storage.class">Smartex\Storage\FilesystemStorage</parameter>
    </parameters>
    <services>
        <service id="network" class="%network.class%" />
        <service id="adapter" class="%adapter.class%" />

        <service id="client" class="Smartex\Client\Client">
            <call method="setNetwork">
                <argument type="service" id="network" />
            </call>
            <call method="setAdapter">
                <argument type="service" id="adapter" />
            </call>
            <call method="setPublicKey">
                <argument type="service" id="public_key" />
            </call>
            <call method="setPrivateKey">
                <argument type="service" id="private_key" />
            </call>
        </service>

        <service id="key_storage" class="%key_storage.class%" public="false">
            <argument>%smartex.key_storage_password%</argument>
        </service>

        <service id="key_manager" class="%key_manager.class%">
            <argument type="service" id="key_storage" />
        </service>

        <service id="public_key" class="Smartex\PublicKey" factory-service="key_storage" factory-method="load">
            <argument>%smartex.public_key%</argument>
        </service>

        <service id="private_key" class="Smartex\PrivateKey" factory-service="key_storage" factory-method="load">
            <argument>%smartex.private_key%</argument>
        </service>
    </services>
</container>
